<!DOCTYPE html>
<html>

<head>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-124885614-2"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-124885614-2');
</script>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>AWESOM-O //
        Phone Destroyer Cards
    </title>

    <link rel="icon" type="image/png" href="/img/favicon.png" />
    <link rel="shortcut icon" type="image/png" href="/img/favicon.png" />
    <meta name="theme-color" content="#ff594f">

    <link rel="alternate" href="/" hreflang="x-default" />
    <link rel="alternate" href="/?hl=en" hreflang="en" />
    <link rel="alternate" href="/?hl=ie" hreflang="ie" />
    <link rel="alternate" href="/?hl=pt" hreflang="pt" />

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.2.0/css/all.css" integrity="sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ"
        crossorigin="anonymous">
    <!-- Bootstrap core CSS -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <!-- Material Design Bootstrap -->
    <link href="/css/mdb.min.css" rel="stylesheet">

    <link href="/css/style.css" rel="stylesheet">

    <style>
        html,
        body,
        header,
        .jarallax {
            height: 400px;
        }

        @media (max-width: 740px) {
            html,
            body,
            header,
            .view {
                height: 400px;
            }
        }

        @media (max-width: 768px) {
            .navbar:not(.top-nav-collapse) {
                background: #ff594f !important;
            }
        }

        @media (min-width: 800px) and (max-width: 850px) {
            .navbar:not(.top-nav-collapse) {
                background: rgba(255, 89, 79, 1) !important;
            }
        }

        .divider {
            height: 3px;
            display: block;
            background-color: rgba(0, 0, 0, .1);
            margin: 1em 0;
            width: 30px
        }

        .cardBg {
            -webkit-clip-path: polygon(15% 8%, 88% 8%, 93% 11%, 93% 88%, 88% 91%, 13% 91%, 9% 87%, 9% 11%);
            clip-path: polygon(15% 8%, 88% 8%, 93% 11%, 93% 88%, 88% 91%, 13% 91%, 9% 87%, 9% 11%);
            transform: translateY(22px);
        }

        .cardContainer {
            width: 90%;
            position: absolute;
            z-index: 1;
            transform-style: preserve-3d;
            will-change: transform;
            transform: perspective(500px) rotateX(0deg) rotateY(0deg);
        }

        .cardFrame {
            width: 100%;
            position: absolute;
            z-index: 2;
            transform: translateZ(15px) translateY(-100%);
            cursor: pointer;
        }

        .sortbutton {
            cursor: pointer;
        }

        .Neutral {
            background-color: #857468;
            color: white;
        }

        .Adventure {
            background-color: #4f80ba;
            color: white;
        }

        .Sci-Fi {
            background-color: #db571d;
            color: white;
        }

        .Mystical {
            background-color: #4b9b38;
            color: white;
        }

        .Fantasy {
            background-color: #d34f5f;
            color: white;
        }

        .NeutralText {
            color: #857468;
        }

        .AdventureText {
            color: #4f80ba;
        }

        .Sci-FiText {
            color: #db571d;
        }

        .MysticalText {
            color: #4b9b38;
        }

        .FantasyText {
            color: #d34f5f;
        }

        @media (min-width: 992px) {
            .fixed-action-btn {
                display: none;
            }
        }

        @media (max-width: 992px) {
            #filters {
                padding-top:20px;
            }
        }

    @media (min-width: 2300px) {
            .col-xxl-3 {
                -ms-flex: 0 0 25%;
                flex: 0 0 25%;
                max-width: 25%
            }
        }
        .preload {
            height: 100%;
            width: 100%;
            z-index: 999;
            background-color: #eee;
            position: fixed;
            
        }

.breadcrumb-item+.breadcrumb-item::before{
    color: white;
}

nav {
    transform: translateZ(200px);
}
        /* .cardCol {
            outline: red dashed 
        } */
    </style>
    <div class="preload">
        <div class="container h-100 d-flex justify-content-center align-items-center">
            <div class="row pt-5 mt-3">
                <div class="col-md-12 mb-3">
                    <div class="text-center white-text">
                        <ul class="list-unstyled ">
                            <li>
                                <h1 class="display-4 mt-md-5 mt-lg-0 mb-5 font-weight-bold dark-grey-text">
                                    <strong>
                                        Loading Cards...
                                    </strong>
                                </h1>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

</head>

<body class="">
    <%- include partials/navbar.ejs %>
    <div class="view jarallax" data-jarallax='{"speed": 0.5}' style="background: url('https://vgtimes.ru/uploads/gallery/main/147200/1510317416_3989.jpg');">
        <div class="mask rgba-black-light">
            <div class="container h-100 d-flex justify-content-center align-items-center">
                <div class="row pt-5 mt-3">
                    <div class="col-md-12 mb-3">
                        <div class="text-center white-text">
                            <ul class="list-unstyled ">
                                <li>
                                    <h1 class="display-4 mt-md-5 mt-lg-0 mb-5 font-weight-bold white-text">
                                        <strong>
                                            Phone Destroyer Cards
                                        </strong>
                                    </h1>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <main>

        <div id="filters-scroll" class="container pb-5 pt-5">

            <div class="fixed-action-btn smooth-scroll" style="bottom: 45px; right: 24px; transform: translateZ(200px)">
                <a href="#filters" class="btn-floating red">
                    <i class="fa fa-filter"></i>
                </a>
            </div>

            <div class="row">
                <!-- Sidebar -->
                <div class="col-lg-3">

                    <div id="filters" class="collapse-show">
                        <!-- Grid row -->
                        <div class="row">
                            <div class="col-md-6 col-lg-12 mb-5">
                                <!-- Panel -->
                                <h5 class="font-weight-bold dark-grey-text">
                                    <strong>Search</strong>
                                    </h3>
                                    <div class="divider"></div>

                                    <!-- Search form -->
                                    <div class="md-form">
                                        <input id="search" class="form-control" type="text" placeholder="Enter a card name"
                                            aria-label="Search">
                                    </div>
                            </div>
                            <div class="col-md-6 col-lg-12 mb-5">
                                <!-- Panel -->
                                <h5 class="font-weight-bold dark-grey-text">
                                    <strong>Order By</strong>
                                    </h3>
                                    <div class="divider"></div>

                                    <p id="sort-nameaz" class="sortbutton dark-grey-text">
                                        Name: A-Z
                                    </p>
                                    <p id="sort-nameza" class="sortbutton dark-grey-text">
                                        Name: Z-A
                                    </p>
                                    <p id="sort-energyhl" class="dark-grey-text sortbutton">
                                        Energy Cost: high to low
                                    </p>
                                    <p id="sort-energylh" class="dark-grey-text sortbutton">
                                        Energy Cost: low to high
                                    </p>
                                    <p id="sort-themeaz" class="dark-grey-text sortbutton">
                                        Theme: A-Z
                                    </p>
                                    <p id="sort-themeza" class="dark-grey-text sortbutton">
                                        Theme: Z-A
                                    </p>
                            </div>

                            <!-- Filter by category-->
                            <div class="col-md-6 col-lg-12 mb-5">
                                <h5 class="font-weight-bold dark-grey-text">
                                    <strong>Theme</strong>
                                    </h3>
                                    <div class="divider"></div>

                                    <!--Radio group-->
                                    <div class="form-group ">
                                        <input class="theme-radio" name="group100" type="radio" id="theme-all">
                                        <label class="theme-radio" for="theme-all" class="dark-grey-text">All</label>
                                    </div>

                                    <div class="form-group">
                                        <input class="theme-radio" name="group100" type="radio" id="theme-adventure">
                                        <label for="theme-adventure" class="dark-grey-text">Adventure</label>
                                    </div>
                                    <div class="form-group">
                                        <input class="theme-radio" name="group100" type="radio" id="theme-fantasy">
                                        <label for="theme-fantasy" class="dark-grey-text">Fantasy</label>
                                    </div>
                                    <div class="form-group">
                                        <input class="theme-radio" name="group100" type="radio" id="theme-mystical">
                                        <label for="theme-mystical" class="dark-grey-text">Mystical</label>
                                    </div>
                                    <div class="form-group">
                                        <input class="theme-radio" name="group100" type="radio" id="theme-neutral">
                                        <label for="theme-neutral" class="dark-grey-text">Neutral</label>
                                    </div>
                                    <div class="form-group">
                                        <input class="theme-radio" name="group100" type="radio" id="theme-sci-fi">
                                        <label for="theme-sci-fi" class="dark-grey-text">Sci-Fi</label>
                                    </div>
                                    <!--Radio group-->
                            </div>
                            <!-- /Filter by category-->

                            <!-- Filter by category-->
                            <div class="col-md-6 col-lg-12 mb-5">
                                <h5 class="font-weight-bold dark-grey-text">
                                    <strong>Rarity</strong>
                                    </h3>
                                    <div class="divider"></div>

                                    <!--Radio group-->
                                    <div class="form-group ">
                                        <input class="rarity-radio" name="group200" type="radio" id="rarity-all">
                                        <label for="rarity-all" class="dark-grey-text">All</label>
                                    </div>
                                    <div class="form-group ">
                                        <input class="rarity-radio" name="group200" type="radio" id="rarity-common">
                                        <label for="rarity-common" class="dark-grey-text">Common</label>
                                    </div>
                                    <div class="form-group">
                                        <input class="rarity-radio" name="group200" type="radio" id="rarity-rare">
                                        <label for="rarity-rare" class="dark-grey-text">Rare</label>
                                    </div>
                                    <div class="form-group">
                                        <input class="rarity-radio" name="group200" type="radio" id="rarity-epic">
                                        <label for="rarity-epic" class="dark-grey-text">Epic</label>
                                    </div>
                                    <div class="form-group">
                                        <input class="rarity-radio" name="group200" type="radio" id="rarity-legendary">
                                        <label for="rarity-legendary" class="dark-grey-text">Legendary</label>
                                    </div>
                                    <!--Radio group-->
                            </div>
                            <!-- /Filter by category-->
                        </div>
                        <!-- /Grid row -->
                    </div>

                </div>
                <!-- /.Sidebar -->
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-12 pb-2">
                            <div class="text-uppercase">
                                <ol id="filters-active" class="breadcrumb feinwaru white-text">
                                    <li class="breadcrumb-item white-text">Filters Active</li>
                                    <li id="filter-active-theme" class="breadcrumb-item white-text">All Themes</li>
                                    <li id="filter-active-rarity" class="breadcrumb-item white-text">All Rarities</li>
                                    <li id="filter-active-search" class="breadcrumb-item white-text"></li>
                                </ol>

                            </div>
                        </div>
                    </div>
                    <div id="cardsList" class="row pt-5">
                        <!--
                            <div class="col-lg-4 col-md-6 col-6 cardCol">
                                <div class="js-tilt cardContainer" data-tilt data-tilt-perspective="500">
                                    <img class="img-fluid cardBg" src="/img/pd-assets/art/cards/CartmanSciCard.jpg">
                                    <div class="cardFrame">
                                        <img class="img-fluid" src="/img/pd-assets/temp2-4.png">
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-6 col-6 cardCol">
                                <div class="js-tilt cardContainer" data-tilt data-tilt-perspective="500">
                                    <img class="img-fluid cardBg" src="/img/pd-assets/art/cards/StanAdvCard.jpg">
                                    <div class="cardFrame">
                                        <img class="img-fluid" src="/img/pd-assets/temp2-5.png">
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-6 col-6 cardCol">
                                <div class="js-tilt cardContainer" data-tilt data-tilt-perspective="500">
                                    <img class="img-fluid cardBg" src="/img/pd-assets/art/cards/TowelieGenCard.jpg">
                                    <div class="cardFrame">
                                        <img class="img-fluid" src="/img/pd-assets/temp2-6.png">
                                    </div>
                                </div>
                            </div>
                        -->
                    </div>
                    <div class="row pt-2 dark-grey-text">

                        <button id="load-more" type="button" class="btn btn-flat btn-lg mx-auto" style="display: none;">LOAD
                            MORE CARDS</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="orange">
            <div class="container">
                <div class="row py-4 d-flex align-items-center">

                    <div class="col-12 text-center mb-4 mb-md-0">
                        <h6 class="mb-0 white-text">
                            <a style="color: inherit; text-decoration: inherit;" href="/terms#redlynx">
                                AWESOM-O is not affiliated with South Park or Ubisoft
                            </a>
                        </h6>
                    </div>

                </div>

            </div>
        </div>
        <%- include partials/footer.ejs %>

        <!--/.Footer-->


        <!-- SCRIPTS -->

        <!-- JQuery -->
        <script type="text/javascript" src="/js/jquery-3.2.1.min.js"></script>

        <!-- Bootstrap tooltips -->
        <script type="text/javascript" src="/js/popper.min.js"></script>

        <!-- Bootstrap core JavaScript -->
        <script type="text/javascript" src="/js/bootstrap.min.js"></script>

        <!-- MDB core JavaScript -->
        <script type="text/javascript" src="/js/mdb.min.js"></script>

        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/tilt.js/1.2.1/tilt.jquery.min.js"></script>


        <script>
            //Animation init
            new WOW().init();
            //Modal
            $('#myModal').on('shown.bs.modal', function () {
                $('#myInput').focus()
            });

            //change size responsively
            const changeCardSize = function () {
                $(".cardCol").css("height", $(".cardFrame").height());
            };

            //shift card art upwards when on small screens
            const mobileArtCompensator = function () {
                if ($(window).width() <= 475) {
                    const width = $(window).width();

                    const compensate = 22 - ((475 - width) / 20)

                    $(".cardBg").css("transform", "translateY(" + compensate + "px)");
                };
            };

            // Material Select Initialization
            $(document).ready(function () {
                $('.mdb-select').material_select();


                //get them cards
                const getCards = new XMLHttpRequest();
                getCards.open("GET",
                    `https://gist.githubusercontent.com/Dragon1320/bf299e83244151715e3852a5776f3495/raw/9b027599b3a0a1d08e4f85bde956c503a176bcc3/cards-old.json`,
                    false);
                getCards.send();
                const cardsYay = JSON.parse(getCards.response);
                //const cardsList = $("#cardsList");
                const displayCards = document.getElementById("cardsList");
                const loadMore = document.getElementById("load-more");
                const searchBox = document.getElementById("search");

                const filterTheme = document.getElementById("filter-active-theme");
                const filterRarity = document.getElementById("filter-active-rarity");
                const filterSearch = document.getElementById("filter-active-search");

                const renderAmount = 12;


                //sorting

                //var urlParams = window.location.href.substring(window.location.href.indexOf("?hl=") + 6);
                /*
                function getCookie(cname) {
                    var name = cname + "=";
                    var decodedCookie = decodeURIComponent(document.cookie);
                    var ca = decodedCookie.split(';');
                    for (var i = 0; i < ca.length; i++) {
                        var c = ca[i];
                        while (c.charAt(0) == ' ') {
                            c = c.substring(1);
                        }
                        if (c.indexOf(name) == 0) {
                            return c.substring(name.length, c.length);
                        }
                    }
                    return "";
                }
                */

                // Yes i realise i couldve used classes for this, fuck you.
                // Sort selector handling.
                let currentSort;

                const sortButtons = Array.from(document.getElementsByClassName("sortbutton"));

                const sortNameAZ = document.getElementById("sort-nameaz");
                const sortNameZA = document.getElementById("sort-nameza");
                const sortEnergyHL = document.getElementById("sort-energyhl");
                const sortEnergyLH = document.getElementById("sort-energylh");
                const sortThemeAZ = document.getElementById("sort-themeaz");
                const sortThemeZA = document.getElementById("sort-themeza");

                const clearSortHighlight = () => {

                    for (let btn of sortButtons) {

                        btn.classList.remove("dark-grey-text");
                        btn.classList.remove("blue-text");
                    }
                }

                clearSortHighlight();
                currentSort = "sort-nameaz";
                sortNameAZ.classList.add("sortbutton");
                sortNameAZ.classList.add("blue-text");

                sortNameAZ.onclick = function () {

                    clearSortHighlight();
                    currentSort = "sort-nameaz";
                    this.classList.add("sortbutton");
                    this.classList.add("blue-text");
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                sortNameZA.onclick = function () {

                    clearSortHighlight();
                    currentSort = "sort-nameza";
                    this.classList.add("sortbutton");
                    this.classList.add("blue-text");
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                sortEnergyHL.onclick = function () {

                    clearSortHighlight();
                    currentSort = "sort-energyhl";
                    this.classList.add("sortbutton");
                    this.classList.add("blue-text");
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                sortEnergyLH.onclick = function () {

                    clearSortHighlight();
                    currentSort = "sort-energylh";
                    this.classList.add("sortbutton");
                    this.classList.add("blue-text");
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                sortThemeAZ.onclick = function () {

                    clearSortHighlight();
                    currentSort = "sort-themeaz";
                    this.classList.add("sortbutton");
                    this.classList.add("blue-text");
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                sortThemeZA.onclick = function () {

                    clearSortHighlight();
                    currentSort = "sort-themeza";
                    this.classList.add("sortbutton");
                    this.classList.add("blue-text");
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }

                // Theme selector handling.
                let currentTheme;

                const themeButtons = Array.from(document.getElementsByClassName("theme-radio"));

                const themeAll = document.getElementById("theme-all");
                const themeAdventure = document.getElementById("theme-adventure");
                const themeFantasy = document.getElementById("theme-fantasy");
                const themeMystical = document.getElementById("theme-mystical");
                const themeNeutral = document.getElementById("theme-neutral");
                const themeScifi = document.getElementById("theme-sci-fi");

                const clearThemeHighlight = () => {

                    for (btn of themeButtons) {

                        btn.checked = false;
                    }
                }

                clearThemeHighlight();
                currentTheme = "theme-all";
                themeAll.checked = true;

                themeAll.onclick = function () {

                    clearThemeHighlight();
                    currentTheme = "theme-all";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                themeAdventure.onclick = function () {

                    clearThemeHighlight();
                    currentTheme = "theme-adventure";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                themeFantasy.onclick = function () {

                    clearThemeHighlight();
                    currentTheme = "theme-fantasy";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                themeMystical.onclick = function () {

                    clearThemeHighlight();
                    currentTheme = "theme-mystical";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                themeNeutral.onclick = function () {

                    clearThemeHighlight();
                    currentTheme = "theme-neutral";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                themeScifi.onclick = function () {

                    clearThemeHighlight();
                    currentTheme = "theme-sci-fi";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }

                // Rarity selector handling.
                let currentRarity;

                const rarityButtons = Array.from(document.getElementsByClassName("rarity-radio"));

                const rarityAll = document.getElementById("rarity-all");
                const rarityCommon = document.getElementById("rarity-common");
                const rarityRare = document.getElementById("rarity-rare");
                const rarityEpic = document.getElementById("rarity-epic");
                const rarityLegendary = document.getElementById("rarity-legendary");

                const clearRarityHighlight = () => {

                    for (btn of rarityButtons) {

                        btn.checked = false;
                    }
                }

                clearRarityHighlight();
                currentRarity = "rarity-all";
                rarityAll.checked = true;

                rarityAll.onclick = function () {

                    clearRarityHighlight();
                    currentRarity = "rarity-all";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                rarityCommon.onclick = function () {

                    clearRarityHighlight();
                    currentRarity = "rarity-common";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                rarityRare.onclick = function () {

                    clearRarityHighlight();
                    currentRarity = "rarity-rare";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                rarityEpic.onclick = function () {

                    clearRarityHighlight();
                    currentRarity = "rarity-epic";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }
                rarityLegendary.onclick = function () {

                    clearRarityHighlight();
                    currentRarity = "rarity-legendary";
                    this.checked = true;
                    sortCards(currentSearch);
                    clearCards();
                    renderCards(renderAmount);
                }

                //

                loadMore.onclick = function () {

                    this.style.display = "none";
                    renderCards(renderAmount);
                }

                //
                let currentSearch = "";

                searchBox.addEventListener("keypress", function (e) {

                    if (e.keyCode === 13) {

                        currentSearch = this.value;
                        this.value = "";

                        sortCards(currentSearch);
                        clearCards();
                        renderCards(renderAmount);
                    }
                });

                //

                let cardList = [];

                const renderCards = n => {

                    // lol jquery
                    const tilt = $('.js-tilt').tilt();
                    tilt.tilt.destroy.call(tilt);

                    loadMore.style.display = "none";

                    let loopCount;
                    if (cardList.length < n) {

                        loopCount = cardList.length;
                    } else {

                        loopCount = n;
                    }

                    for (let i = 0; i < loopCount; i++) {

                        cardsList.innerHTML +=
                            `
                                <div class="col-lg-4 col-md-6 col-6 cardCol">
                                    <a href="/${cardList[0].art.slice(0, -4)}">
                                        <div class="js-tilt cardContainer" data-tilt data-tilt-perspective="500">
                                        
                                            <img class="img-fluid cardBg" src="/img/backgrounds/${cardList[0].art}">
                                            <div class="cardFrame">
                                                <img class="img-fluid" src="/img/frames/frame_${cardList[0].art.slice(0, -4)}.png">
                                            </div>
                                        </div>
                                    </a>
                                </div>
                            `

                        cardList.shift();
                    }

                    $('.js-tilt').tilt({
                        scale: 1.05,
                        glare: true,
                        maxGlare: 0.25
                    });
                    
                    setTimeout(() => {

                        changeCardSize();
                        mobileArtCompensator();

                        // only add a load more button one the other cards have loaded
                        if (cardList.length !== 0) {

                            loadMore.style.display = "block";
                        }
                    }, 200);
                }

                const clearCards = () => {

                    cardsList.innerHTML = "";
                }

                const sortCards = (search = null) => {

                    // update top bar thingy
                    filterTheme.innerText = currentTheme.split("-")[0] + ": " + currentTheme.split("-")[1];
                    filterRarity.innerText = currentRarity.split("-")[0] + ": " + currentRarity.split("-")[
                        1];
                    filterSearch.innerText = (search === "" ? "" : `contains: ${search}`);

                    cardList = [];

                    for (let card of cardsYay) {

                        // Theme sorting.

                        // Remove 'theme-' from the start of currentTheme.
                        if (currentTheme.slice(6).toLowerCase() !== card.theme.toLowerCase() &&
                            currentTheme !== "theme-all") {

                            continue;
                        }

                        // Rarity sorting.

                        // Remove 'rarity-' from the start of currentRarity.
                        if (currentRarity.slice(7).toLowerCase() !== card.rarity.toLowerCase() &&
                            currentRarity !== "rarity-all") {

                            continue;
                        }

                        // legacy json shit
                        if (search !== null && (card.name instanceof Array ? card.name[0] : card.name).toLowerCase()
                            .indexOf(search.toLowerCase()) === -1) {

                            continue;
                        }

                        cardList.push(card);
                    }

                    switch (currentSort) {
                        case "sort-nameaz":

                            cardList.sort((a, b) => {
                                return a.name.toString().localeCompare(b.name.toString());
                            });
                            break;
                        case "sort-nameza":

                            cardList.sort((a, b) => {
                                return b.name.toString().localeCompare(a.name.toString());
                            });
                            break;
                        case "sort-energyhl":

                            cardList.sort((a, b) => {
                                return b.energy - a.energy;
                            });
                            break;
                        case "sort-energylh":

                            cardList.sort((a, b) => {
                                return a.energy - b.energy;
                            });
                            break;
                        case "sort-themeaz":

                            cardList.sort((a, b) => {
                                return a.theme.toString().localeCompare(b.theme.toString());
                            });
                            break;
                        case "sort-themeza":

                            cardList.sort((a, b) => {
                                return b.theme.toString().localeCompare(a.theme.toString());
                            });
                            break;
                    }
                }

                sortCards(currentSearch);
                clearCards();
                renderCards(renderAmount);

                //change size responsively
                const changeCardSize = function () {
                    $(".cardCol").css("height", $(".cardFrame").height());
                };

                //shift card art upwards when on small screens
                const mobileArtCompensator = function () {
                    if ($(window).width() <= 475) {
                        const width = $(window).width();

                        const compensate = 22 - ((475 - width) / 20)

                        $(".cardBg").css("transform", "translateY(" + compensate + "px)");
                    };
                };

                /*
                //make dat grid
                const updateGrid = function () {

                    const sortCookie = getCookie("sort");

                    if (sortCookie === "nameaz") {
                        cardsYay.sort((a, b) => {
                            return a.name.toString().localeCompare(b.name.toString())
                        });
                        $(".sortbutton").removeClass("dark-grey-text blue-text");
                        $("#sort-nameaz").addClass("sortbutton blue-text");
                    } else if (sortCookie === "nameza") {
                        cardsYay.sort((a, b) => {
                            return a.name.toString().localeCompare(b.name.toString())
                        });
                        cardsYay.reverse();
                        $(".sortbutton").removeClass("dark-grey-text blue-text");
                        $("#sort-nameza").addClass("sortbutton blue-text");
                    } else if (sortCookie === "energylh") {
                        cardsYay.sort((a, b) => {
                            return a.energy.toString().localeCompare(b.energy.toString())
                        });
                        $(".sortbutton").removeClass("dark-grey-text blue-text");
                        $("#sort-energylh").addClass("sortbutton blue-text");
                    } else if (sortCookie === "energyhl") {
                        cardsYay.sort((a, b) => {
                            return a.energy.toString().localeCompare(b.energy.toString())
                        });
                        cardsYay.reverse();
                        $(".sortbutton").removeClass("dark-grey-text blue-text");
                        $("#sort-energyhl").addClass("sortbutton blue-text");
                    } else if (sortCookie === "themeaz") {
                        cardsYay.sort((a, b) => {
                            return a.theme.toString().localeCompare(b.theme.toString())
                        });
                        $(".sortbutton").removeClass("dark-grey-text blue-text");
                        $("#sort-themeaz").addClass("sortbutton blue-text");
                    } else if (sortCookie === "themeza") {
                        cardsYay.sort((a, b) => {
                            return a.energy.toString().localeCompare(b.energy.toString())
                        });
                        cardsYay.reverse();
                        $(".sortbutton").removeClass("dark-grey-text blue-text");
                        $("#sort-themeza").addClass("sortbutton blue-text");
                    } else {
                        cardsYay.sort((a, b) => {
                            return a.name.toString().localeCompare(b.name.toString())
                            $(".sortbutton").removeClass("dark-grey-text blue-text");
                            $("#sort-nameaz").addClass("sortbutton blue-text");
                        });
                    };

                    //const urlFilter = url.substring(url.indexOf("filtertheme") + 12, );

                    const themeCookie = getCookie("theme");
                    const rareCookie = getCookie("rarity");

                    const changeThemeSelection = function () {
                        $(".theme-radio").removeAttr("checked", "checked");
                        $("#theme-" + themeCookie).attr("checked", "checked");
                    }

                    const filtersActive = function () {
                        $("#filter-active-theme").html(themeCookie);
                        $("#filter-active-theme").html(rareCookie);
                    }

                    changeThemeSelection();
                    filtersActive();

                    const validThemes = ["all", "neutral", "adventure", "sci-fi", "mystical",
                        "fantasy"
                    ];
                    if (validThemes.includes(themeCookie) === true) {
                        var theme = themeCookie;
                    } else {
                        var theme = false;
                    }


                    const validRares = ["all", "common", "rare", "epic", "legendary"];
                    if (validRares.includes(rareCookie) === true) {
                        var rare = rareCookie;
                    } else {
                        var rare = false;
                    }
                    console.log(rare);
                    console.log(theme)
                    cardsList.html("");



                    for (let i = 0; i < cardsYay.length; i++) {

                        if (cardsYay[i].rarity.toLowerCase() === rare && cardsYay[i].theme.toLowerCase() ===
                            theme) {
                            cardsList.append(
                                `
                                        <div class="col-lg-4 col-md-6 col-6 cardCol">
                                            <a href="cards/${cardsYay[i].art.slice(0, -4)}">
                                                <div id="card-${[i]}" class="js-tilt cardContainer" data-tilt data-tilt-perspective="500">
                                                    <img class="img-fluid cardBg" src="/cards/backgrounds/${cardsYay[i].art}">
                                                    <div class="cardFrame">
                                                        <img class="img-fluid" src="/cards/frames/frame_${cardsYay[i].art.slice(0, -4)}.png">
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                        `
                            );
                        };
                        if (cardsYay[i].rarity.toLowerCase() === rare && theme === "all") {
                            cardsList.append(
                                `
                                        <div class="col-lg-4 col-md-6 col-6 cardCol">
                                            <a href="cards/${cardsYay[i].art.slice(0, -4)}">
                                                <div id="card-${[i]}" class="js-tilt cardContainer" data-tilt data-tilt-perspective="500">
                                                    <img class="img-fluid cardBg" src="/cards/backgrounds/${cardsYay[i].art}">
                                                    <div class="cardFrame">
                                                        <img class="img-fluid" src="/cards/frames/frame_${cardsYay[i].art.slice(0, -4)}.png">
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                        `
                            )
                        };
                        if (cardsYay[i].theme.toLowerCase() === theme && rarity === "all") {
                            cardsList.append(
                                `
                                        <div class="col-lg-4 col-md-6 col-6 cardCol">
                                            <a href="cards/${cardsYay[i].art.slice(0, -4)}">
                                                <div id="card-${[i]}" class="js-tilt cardContainer" data-tilt data-tilt-perspective="500">
                                                    <img class="img-fluid cardBg" src="/cards/backgrounds/${cardsYay[i].art}">
                                                    <div class="cardFrame">
                                                        <img class="img-fluid" src="/cards/frames/frame_${cardsYay[i].art.slice(0, -4)}.png">
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                        `
                            )
                        }
                        /* else if (theme === "all") {
                                                   cardsList.append(
                                                       `
                                                               <div class="col-lg-4 col-md-6 col-6 cardCol">
                                                                   <a href="cards/${cardsYay[i].art.slice(0, -4)}">
                                                                       <div id="card-${[i]}" class="js-tilt cardContainer" data-tilt data-tilt-perspective="500">
                                                                           <img class="img-fluid cardBg" src="/cards/backgrounds/${cardsYay[i].art}">
                                                                           <div class="cardFrame">
                                                                               <img class="img-fluid" src="/cards/frames/frame_${cardsYay[i].art.slice(0, -4)}.png">
                                                                           </div>
                                                                       </div>
                                                                   </a>
                                                               </div>
                                                               `
                                                   );
                                               } else if (theme === false) {
                                                   cardsList.append(
                                                       `
                                                               <div class="col-lg-4 col-md-6 col-6 cardCol">
                                                                   <a href="cards/${cardsYay[i].art.slice(0, -4)}">
                                                                       <div id="card-${[i]}" class="js-tilt cardContainer" data-tilt data-tilt-perspective="500">
                                                                           <img class="img-fluid cardBg" src="/cards/backgrounds/${cardsYay[i].art}">
                                                                           <div class="cardFrame">
                                                                               <img class="img-fluid" src="/cards/frames/frame_${cardsYay[i].art.slice(0, -4)}.png">
                                                                           </div>
                                                                       </div>
                                                                   </a>
                                                               </div>
                                                               `
                                                   );
                                               } 
                    };
                    changeCardSize();
                    $('.js-tilt').tilt({
                        scale: 1.05,
                        glare: true,
                        maxGlare: 0.25
                    });
                };

                /*card information
                const updateModal = function () {
                    $(".cardContainer").click(function () {
                        const cardID = $(this).attr("id").substring(5);

                        console.log(cardID)
                        //$("#modalImg").attr("src", "/img/pd-assets/art/cards/" + cardsYay[cardID].art);

                        //modal title
                        if (cardsYay[cardID].name instanceof Array) {
                            const cardName = cardsYay[cardID].name[0];
                            $(".modal-title").text(cardName)
                        } else {
                            const cardName = cardsYay[cardID].name;
                            $(".modal-title").text(cardName)
                        };


                        //modal tags
                        //reset tags
                        $("#tags").html("");
                        //loop through those tags
                        for (let i = 0; i < cardsYay[cardID].tags.length; i++) {
                            $("#tags").append(
                                ` <span class="badge badge-pill ${cardsYay[cardID].theme}">${cardsYay[cardID].tags[i]}</span> `
                            );
                        };

                        //modal theme
                        switch (cardsYay[cardID].theme) {
                            case "Neutral":
                                $("#modal-header").removeClass();
                                $("#modal-header").addClass("modal-header Neutral");
                                break;
                            case "Adventure":
                                $("#modal-header").removeClass();
                                $("#modal-header").addClass("modal-header Adventure");
                                break;
                            case "Sci-Fi":
                                $("#modal-header").removeClass();
                                $("#modal-header").addClass("modal-header Sci-Fi");
                                break;
                            case "Mystical":
                                $("#modal-header").removeClass();
                                $("#modal-header").addClass("modal-header Mystical");
                                break;
                            case "Fantasy":
                                $("#modal-header").removeClass();
                                $("#modal-header").addClass("modal-header Fantasy");
                                break;
                        };
                    });
                }
                */
                $(".btn-floating").click(function () {

                    if ($("#filters").hasClass("collapse")) {
                        $("#filters").toggleClass("collapse", "collapse-show");
                        $(".btn-floating").attr("href", "#filters-scroll")
                    } else {
                        $("#filters").toggleClass("collapse", "collapse-show");
                        $(".btn-floating").attr("href", "#filters-active")
                    }
                    //alert("ahh")


                })
                /*

                $('.theme-radio').click(function () {
                    document.cookie = "theme=" + $(this).attr("id").substring(6);
                    updateGrid();
                    //updateModal();
                    $("#filter-active-theme").html(getCookie("theme"));
                });

                $('.rarity-radio').click(function () {
                    document.cookie = "rarity=" + $(this).attr("id").substring(7);
                    updateGrid();
                    //updateModal();
                    $("#filter-active-rarity").html(getCookie("rare"));
                    console.log(cardsYay)
                });

                $('.sortbutton').click(function () {
                    document.cookie = "sort=" + $(this).attr("id").substring(5);
                    updateGrid();
                    //updateModal();
                    //console.log()
                });

                if (getCookie("theme") === false) {
                    $("#theme-all").select();
                }

                updateGrid();
                //updateModal();

                //update the card size quickly on page load
                setInterval(function () {
                    changeCardSize();
                }, 500)

                mobileArtCompensator();
                */

                document.onkeypress = function (e) {
                    document.getElementById("search").focus();
                }
            });

            /*$("#modalCard").on('shown.bs.modal', function(){
                changeCardSize();
            });
            
            */
            //shit to do when people try to resize to see if i've forgot to do stuff but i havent because im a world class web dev
            $(window).resize(function () {
                changeCardSize();
                mobileArtCompensator();

            });
            window.onload = () => {
                $(".preload").fadeOut(500);
            }
        </script>

</body>

</html>